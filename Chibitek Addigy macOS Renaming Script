#!/bin/bash

###############################################################################
# Rename macOS Device in Format: COMPANYCODE - Firstname Lastname MODEL chipset
#
# Author: Erick Grau
# Company: Chibitek
# Date: March 28, 2025
#
# Example: CT - Erick Grau MBP m1
###############################################################################

# Get Addigy Site Name or default to Chibitek
fullSiteName="${ADDIGY_SITE_NAME:-Chibitek}"
cleanSiteName=$(echo "$fullSiteName" | tr -cd '[:alnum:] [:space:]')

# Map site name to 2-letter UPPERCASE company code
case "$cleanSiteName" in
  "Chibitek") siteCode="CT" ;;
  "Hexclad") siteCode="HX" ;;
  "Intercept Telehealth") siteCode="IC" ;;
  "Relevate Health") siteCode="RH" ;;
  "Barbette Media") siteCode="BM" ;;
  "AOSD") siteCode="AO" ;;
  "Skona") siteCode="SK" ;;
  *)
    # Fallback: generate 2-letter code from site name
    siteCode=$(echo "$cleanSiteName" | tr -cd '[:alpha:]' | cut -c1-2 | tr '[:lower:]' '[:upper:]')
    siteCode="${siteCode:-XX}"
    ;;
esac

echo "DEBUG: ADDIGY_SITE_NAME = $ADDIGY_SITE_NAME"
echo "DEBUG: Resolved fullSiteName = $fullSiteName"
echo "DEBUG: Final company code = $siteCode"

# Get the currently logged-in user
loggedInUser=$(stat -f%Su /dev/console)
fullName=$(dscl . -read /Users/"$loggedInUser" RealName | tail -1)

# Capitalize function for name parts
capitalize() {
  echo "$1" | awk '{print toupper(substr($0,1,1)) tolower(substr($0,2))}'
}

# Extract and clean first and last names
firstRaw=$(echo "$fullName" | awk '{print $1}' | tr -cd '[:alnum:]')
lastRaw=$(echo "$fullName" | awk '{print $NF}' | tr -cd '[:alnum:]')

firstName=$(capitalize "$firstRaw")
lastName=$(capitalize "$lastRaw")

# Get model name from system profiler (e.g., MacBook Air)
modelName=$(system_profiler SPHardwareDataType | awk -F": " '/Model Name/ {print $2}')

# Map to UPPERCASE model short code
case "$modelName" in
  "MacBook Pro")    model="MBP" ;;
  "MacBook Air")    model="MBA" ;;
  "MacBook")        model="MB" ;;
  "iMac")           model="IMAC" ;;
  "Mac mini")       model="MM" ;;
  "Mac Pro")        model="MP" ;;
  *)                 model="MAC" ;;
esac

# Detect chipset
chipInfo=$(sysctl -n machdep.cpu.brand_string 2>/dev/null || echo "Apple Silicon")
chipset="unknown"

if [[ "$chipInfo" == *"Intel"* ]]; then
  if [[ "$chipInfo" == *"i3"* ]]; then chipset="i3"
  elif [[ "$chipInfo" == *"i5"* ]]; then chipset="i5"
  elif [[ "$chipInfo" == *"i7"* ]]; then chipset="i7"
  elif [[ "$chipInfo" == *"i9"* ]]; then chipset="i9"
  else chipset="intel"
  fi
elif [[ "$chipInfo" == *"Apple"* ]]; then
  if [[ "$chipInfo" == *"M1"* ]]; then chipset="m1"
  elif [[ "$chipInfo" == *"M2"* ]]; then chipset="m2"
  elif [[ "$chipInfo" == *"M3"* ]]; then chipset="m3"
  elif [[ "$chipInfo" == *"M4"* ]]; then chipset="m4"
  elif [[ "$chipInfo" == *"M5"* ]]; then chipset="m5"
  else chipset="m"
  fi
fi

# Final formatted name with spaces and no dashes between components
newName="${siteCode} - ${firstName} ${lastName} ${model} ${chipset}"

# Set names
scutil --set ComputerName "$newName"
scutil --set HostName "$newName"

# Sanitize LocalHostName (ASCII, no spaces/special chars, max 63 chars)
safeLocalHostName=$(echo "$newName" | iconv -t ascii//TRANSLIT | tr '[:space:]' '-' | tr -cd '[:alnum:]-' | cut -c1-63)
scutil --set LocalHostName "$safeLocalHostName"

echo "âœ… Computer successfully renamed to: $newName"

# Restart Addigy agents
/Library/Addigy/collector
/Library/Addigy/auditor

# Optional: Watchman Monitoring
# /Library/MonitoringClient/RunClient -F
